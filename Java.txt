1. What is Java and types of data type ?
  1. Java is a high level,object-oriented programming language that was developed by James Gotling at 1995.
  2. It is platform-independent, meaning that programs written can run on any platform that has a Java Virtual Machine(JVM) installed.
  3. There are two tpes of data types defined in the java - 
    i. primitive - This type of data is predefined by Java. We just use them to provide the data type for the input. These data types are defined as below - 
      - byte
      - short
      - int
      - long
      - float
      - double
      - char
      - boolean
    ii. non-primitive - This type of data type can be customized by the user. These are as below -
      - String
      - array

2. Why is Java not a pure Object-Oriented Programming Language ?
  Java supports primitive data types - byte, short, int, long, float, double, char, boolean.

3. What is Instance and Local Variable ?
  Instance Variable - Instance variables are those variables that are accessible by all the methods in the class. They are declared outside the methods and inside the class. These variables describe the properties of an object and remain bound to it at any cost.
Example -
class Athlete {
  public string athleteName;
  public double athletespeed;
  public int athleteage;
}

  Local Variable - Local variables are those variables present within a block, function, or constructor and can be accessed only inside them. Whenever a local Variable is declared inside a method, the other class methods don't have any knowledge about the local Variable.
Example - 
public void athlete() {
  String athleteName;
  double athletespeed;
  int athleteage;
}

Instance vs Local Variables
class Athlete {
  public String athleteName;
  public double athletespeed;
  public int athleteage;

  public Athlete(name,speed,age) {
    this.athleteName = name;
    this.athletespeed = speed;
    this.athleteage = age;
  }

  public void athleteRun() {
    int speed = 100;
    System.out.println("Athlete runs at" + speed + "km/hr");
  }
}

In class Athlete, athleteName, athletespeed, athleteage are instance variables.
name, speed, age and int speed = 100 are the local variables.

4. What do you mean by data encapsulation ?
  1. Data encapsulation is an object-oriented programming concept of hiding the data attributes and their behaviours in a single unit.
  2. It helps developers to follow modularity while developing software by ensuring that each object is independent of other objects by having its own methods, attributes, and functionalities.
  3. It is used for the security of the private properties of an object and hence serves the purposes of data hiding.
class {
  data members(properties)
      +
  methods(behaviour)
}

5. What are the difference between equals() and equality operator(==) ?
  Difference b/w equals() and equality operator(==)
equals()
1. This is a method defined in the object class.
2. This method is used for checking the equality of contents between two objects as per the specified business logic.
3. The equals() method is present in the object class, so we can override our custom equals() method in the custom class, for object comparison.

==(equality operator)
1. It is a binary operator in Java.
2. This operator is used for comparing addresses i.e., checks if both the objects are pointing to the same memory location.
3. It cannot be modified. They always compare the HashCode.

6. Why is Java a platform independent language ?
  Java language are developed so that it does not depend on any hardware or software because the compiler compiles the code and then converts it to platform-independent byte code which can be run on multiple systems.
The only condition to run that byte code is for the machine to have a runtime environment(JRE) installed in it.

7. What is Method ?
  1. Method is the part of the class where we put our logic.
  2. Method are having their own body.
  3. We cannot create methods inside a method.
  4. There are four types of methods defined - 
    i. parameterized
    ii. non-paremeterized
    iii. return type
    iv. non-return type

8. What are the features of Java ?
  Java has several features that make it a popular programming language. Some of these features are east to learn, OOPs, Platform Independence, Robust, Portable and Secured.
1. Easy - Java is a language which is considered easy to learn.
2. OOPs - OOPs stands for Object-Oriented Programming Language. OOPs signifies that, in java, everything is considered an object.
3. Platform Independence - Java is not compiled into a platform-specific machine. Instead, it is compiled into platform independence bytecode. This code is interpreted by the virtual machine on which the platform runs.
4. Robust - Java is a strong programming language as it uses strong memory management. The concepts like Automatic Garbage Collection, Exception Handling, etc make it more robust.
5. Portable - Java supports read-once-write anywhere approach. We can execute the java program on every machine.
6. Secured - Java is secured because it doesn't use explicit pointers. Java also provides the concept of bytecode and exception handling which makes it more secured.
